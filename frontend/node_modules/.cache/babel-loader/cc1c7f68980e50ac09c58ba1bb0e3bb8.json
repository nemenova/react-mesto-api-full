{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._address = options.baseUrl;\n    this._token = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`${res.status}`);\n  }\n\n  getCards() {\n    return fetch(`${this._address}/cards`, {\n      headers: this._token\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._address}/users/me`, {\n      headers: this._token\n    }).then(this._checkResponse);\n  }\n\n  changeUserInfo(user) {\n    return fetch(`${this._address}/users/me`, {\n      method: 'PATCH',\n      headers: this._token,\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(card) {\n    return fetch(`${this._address}/cards`, {\n      method: 'POST',\n      headers: this._token,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  changeProfilePhoto(data) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._token,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._token\n    }).then(this._checkResponse);\n  } // like(id) {\n  //     return fetch(`${this._address}/cards/likes/${id}`, {\n  //         method: 'PUT',\n  //         headers: this._token,\n  //     }).then(this._checkResponse)\n  // }\n  // dislike(id) {\n  //     return fetch(`${this._address}/cards/likes/${id}`, {\n  //         method: 'DELETE',\n  //         headers: this._token,\n  //     }).then(this._checkResponse)\n  // }\n\n\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._address}/cards/likes/${id}`, {\n      method: isLiked ? \"DELETE\" : \"PUT\",\n      headers: this._token\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '4f373d74-bd3f-4a56-8098-6fb64502e0a9',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/victoria/Documents/coding/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","_address","baseUrl","_token","headers","_checkResponse","res","ok","json","Promise","reject","status","getCards","fetch","then","getUserInfo","changeUserInfo","user","method","body","JSON","stringify","name","about","addNewCard","card","link","changeProfilePhoto","data","avatar","deleteCard","id","changeLikeCardStatus","isLiked","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n        this._address = options.baseUrl;\n        this._token = options.headers;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`${res.status}`);\n    }\n    getCards() {\n        return fetch(`${this._address}/cards`, {\n            headers: this._token\n        })\n            .then(this._checkResponse) \n    }\n    getUserInfo() {\n        return fetch(`${this._address}/users/me`, {\n            headers: this._token,\n        \n        })\n            .then(this._checkResponse)\n    }\n    changeUserInfo(user) {\n        return fetch(`${this._address}/users/me`,  {\n            method: 'PATCH',\n            headers: this._token,\n            \n            body: JSON.stringify({\n                name: user.name,\n                about: user.about\n            })\n                \n        }).then(this._checkResponse)\n    }\n    addNewCard(card) {\n        return fetch(`${this._address}/cards`, {\n            method: 'POST',\n            headers: this._token,\n\n            body: JSON.stringify({\n                name: card.name,\n                link: card.link\n            })\n\n        }).then(this._checkResponse)\n    }\n    changeProfilePhoto(data) {\n        return fetch(`${this._address}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._token,\n\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n\n        }).then(this._checkResponse)\n    }\n    deleteCard(id) {\n        return fetch(`${this._address}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._token,\n            \n        }).then(this._checkResponse)\n    }\n    // like(id) {\n    //     return fetch(`${this._address}/cards/likes/${id}`, {\n    //         method: 'PUT',\n    //         headers: this._token,\n\n    //     }).then(this._checkResponse)\n    // }\n    // dislike(id) {\n    //     return fetch(`${this._address}/cards/likes/${id}`, {\n    //         method: 'DELETE',\n    //         headers: this._token,\n\n    //     }).then(this._checkResponse)\n    // }\n    changeLikeCardStatus(id, isLiked) {\n        return fetch(`${this._address}/cards/likes/${id}`, {\n            method: isLiked ? \"DELETE\" : \"PUT\",\n            headers: this._token,\n\n        }).then(this._checkResponse)\n    }\n}\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n    headers: {\n        authorization: '4f373d74-bd3f-4a56-8098-6fb64502e0a9',\n        'Content-Type': 'application/json'\n    }\n})\nexport default api;"]},"metadata":{},"sourceType":"module"}